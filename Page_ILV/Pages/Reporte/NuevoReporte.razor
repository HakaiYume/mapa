@page "/nuevo-reporte"
@page "/nuevo-reporte/{id:int}"

@using Page_ILV.Data;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient Http;
@inject NavigationManager Navegacion;
@inject IJSRuntime _jsRuntime

<img src="css/Img/Web Proyecto logo.png" width="325" height="300" />

<section>
    <form class="location-form" onSubmit="sendLocation()">
        <div id="map" style="height:500px;width:100%;"></div>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="ubicacion" value="">
        </div>
        <label class="col-sm-3">latitud</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="latitud" value="">
        </div>
        <label class="col-sm-3">longitud</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="longitud" value="">
        </div>
        <button class="send" type="submit"></button>
    </form>
</section>

<EditForm Model="oReport">
    <div class="container-fluid">
        <div class="form-group row mb-1">
            <label class="col-sm-3">Foto</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oReport.Foto" required></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Descripcion</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oReport.Descripcion" required></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Fecha</label>
            <div class="col-sm-9">
                <InputDate class="form-control" @bind-Value="@oReport.Fecha" required></InputDate>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Coordenadas</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oReport.Coordenadas" required></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Usuario</label>
            <div class="col-sm-9">
                <InputSelect class="form-control" @bind-Value="@id_usuario" required>
                    @if (oUsuario != null && oUsuario.Data != null)
                    {
                        @foreach (var oElemento in (List<Regist>)oUsuario.Data)
                        {
                            <option value="@oElemento.IdUsuario.ToString()">@oElemento.Correo</option>
                        }
                    }
                </InputSelect>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Etiqueta</label>
            <div class="col-sm-9">
                <InputSelect class="form-control" @bind-Value="@id_etiqueta" required>
                    @if (oEtiqueta != null && oEtiqueta.Data != null)
                    {
                        @foreach (var oElemento in (List<Etiqueta>)oEtiqueta.Data)
                        {
                            <option value="@oElemento.IdEtiqueta.ToString()">@oElemento.Nombre</option>
                        }
                    }
                </InputSelect>
            </div>
        </div>
        <div class="form-group row mb-1">
            <div class="col-sm-1">
                <button class="btn btn-primary" @onclick="Guardar">Guadar</button>
            </div>
            <div>
                <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    public string id_usuario { get; set; }
    public string id_etiqueta { get; set; }

    public Respuesta<List<Regist>> oUsuario = new Respuesta<List<Regist>>();
    public Respuesta<List<Etiqueta>> oEtiqueta = new Respuesta<List<Etiqueta>>();

    Report oReport = new Report();
    Respuesta<object> oRespuesta = new Respuesta<object>();
    Respuesta<Report> oRespuestaReport = new Respuesta<Report>();

    public string Url = "/api/Reporte";
    public string Url_Usuario = "/api/Registro";
    public string Url_Etiqueta = "/api/Etiqueta";

    private void Cancelar() => Navegacion.NavigateTo("/reporte");

    private async Task Guardar()
    {
        oReport.Id_Usuario = Convert.ToInt32(id_usuario);
        oReport.Id_Etiqueta = Convert.ToInt32(id_etiqueta);

        if (id != 0)
        {
            var response = await Http.PutAsJsonAsync<Report>(Url, oReport);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
            Navegacion.NavigateTo("/reporte");
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Report>(Url, oReport);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
            Navegacion.NavigateTo("/reporte");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        oUsuario = await Http.GetFromJsonAsync<Respuesta<List<Regist>>>(Url_Usuario);
        oEtiqueta = await Http.GetFromJsonAsync<Respuesta<List<Etiqueta>>>(Url_Etiqueta);

        if (id != 0)
        {
            oRespuestaReport = await Http.GetFromJsonAsync<Respuesta<Report>>(Url + "/" + id);
            oReport = oRespuestaReport.Data;

            id_usuario = oReport.Id_Usuario.ToString();
            id_etiqueta = oReport.Id_Etiqueta.ToString();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _jsRuntime.InvokeVoidAsync("initMap", null);
        }
    }
}

